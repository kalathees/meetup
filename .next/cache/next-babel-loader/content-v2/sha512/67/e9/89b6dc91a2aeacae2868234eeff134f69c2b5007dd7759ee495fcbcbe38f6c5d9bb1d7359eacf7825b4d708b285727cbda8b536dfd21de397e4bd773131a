{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Program\\\\code\\\\React\\\\Nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kalathees:GXxFahIYi9iUKFCf@cluster0.apmdz.mongodb.net/mydb?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: selectedMeetup.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://kalathees:GXxFahIYi9iUKFCf@cluster0.apmdz.mongodb.net/mydb?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _Id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._Id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Program/code/React/Nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","selectedMeetup","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","_Id","close","console","log","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAA3B;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAACL,cAAc,CAACM,GAAf,CAAmBC,MAAM,KAC7B;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAV;AAAR,KAD6B,CAAzB;AAFD,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAGA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAC,MAAMF,iBAAiB,CAACe,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAC5B,QAAQ,CAACuB,QAAD;AAAb,GAA1B,CAA3B;AAEEd,EAAAA,MAAM,CAACoB,KAAP;AAEFC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAElB,cAAc,CAACc,GAAf,CAAmBJ,QAAnB,EADM;AAEVnB,QAAAA,KAAK,EAAES,cAAc,CAACT,KAFZ;AAGVC,QAAAA,OAAO,EAAEQ,cAAc,CAACR,OAHd;AAIVF,QAAAA,KAAK,EAAEU,cAAc,CAACV,KAJZ;AAKVG,QAAAA,WAAW,EAAEO,cAAc,CAACP;AALlB;AADP;AADF,GAAP;AAWD;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport {MongoClient, ObjectId} from 'mongodb'\r\n\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n    image={props.meetupData.image}\r\n    title={props.meetupData.title}\r\n    address={props.meetupData.address}\r\n    description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://kalathees:GXxFahIYi9iUKFCf@cluster0.apmdz.mongodb.net/mydb?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup=await meetupsCollection.find({},{_id:1}).toArray()\r\n  return {\r\n    fallback: false,\r\n    paths:selectedMeetup.map(meetup=>(\r\n      {params:{meetupId:meetup._id.toString()}\r\n\r\n    }))\r\n\r\n}\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://kalathees:GXxFahIYi9iUKFCf@cluster0.apmdz.mongodb.net/mydb?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup=await meetupsCollection.findOne({_Id:ObjectId(meetupId)})\r\n\r\n    client.close();\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._Id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n}\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}